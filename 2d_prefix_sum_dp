/*	
	Given a 2d array of integers;
	q queries follow
	each query contains a submatrix 
	i1 l1 i2 l2 
	output : sum of all elements of this submatrix
	
	Learn to use 2d pointers | It will help to pass 2d arrays to function, otherwise 2d array need to be declared globally
*/

#include<iostream>
using namespace std;
int ans[1000][1000]={0};
int a[1000][1000];
void matrixsum(int n)
{
	for(int i=1;i<n;++i)
	{
		for(int j=1;j<n;++j)
		{
			ans[i][j]=(a[i][j]+ans[i-1][j]+ans[i][j-1]-ans[i-1][j-1]);
		}
	}
}
int main()
{
	int n;
	cin>>n;
	for(int i=0;i<n;++i)
	{
		for(int j=0;j<n;++j)
		{
			cin>>a[i][j];
		}
	}
	ans[0][0]=a[0][0];
	for(int i=1;i<n;++i)
		ans[0][i]=(a[0][i]+ans[0][i-1]);
	for(int i=1;i<n;++i)
		ans[i][0]=(a[i][0]+ans[i-1][0]);
	matrixsum(n);
	for(int i=0;i<n;++i)
	{
		for(int j=0;j<n;++j)
			cout<<a[i][j]<<" ";
		cout<<"\t";
		for(int j=0;j<n;++j)
			cout<<ans[i][j]<<" ";
		cout<<"\n";
	}
	return 0;
	int q;
	cin>>q;
	while(q--)
	{
		int i1,i2,j1,j2;
		cin>>i1>>j1>>i2>>j2;

	}
}
